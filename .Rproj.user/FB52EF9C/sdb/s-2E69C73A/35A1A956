{
    "contents" : "---\ntitle: 'Data Analysis for: Priming Power with 3 DVs'\nauthor: \"Erika Salomon\"\ndate: \"January 12, 2016\"\noutput:\n  pdf_document:\n    fig_caption: yes\n---\n\n```{r setup, include=FALSE}\n# Load Packages\nlibrary(psych)\nlibrary(ggplot2)\nlibrary(GGally)\nlibrary(plyr)\nlibrary(reshape)\n```\n\n## Summary\n\nThis file reports data manipulations and analyses performed on an experiment studying the effects of power primes. Participants recruited via Mechanical Turk completed a power priming manipulation in which they were asked recall and visualize a time when they were high or low in power. After writing a description of their visualization, they completed a series of tasks to assess three dependent variables.\n\nParticipants'  **action/inaction intentions** were measured with 7 questions (e.g., \"I am feeling energetic\"; 1 = *not at all*, 7 = *extremely*; Albarracin, 2009, unpublished). \n\nParticipants' **trust** was measured with two measures. Six items from the World Values Survey asked how much participants trust people belonging to different groups (e.g., \"People you meet for the first time\"; 1 = *trust completely*, 4 = *do not trust at all*). Participants also completed the trust game (Berg et al., 1995), which asked them how many raffle tickets they would entrust to another person who may or may not return them.\n\nTwo measures assessed participants' **perspective taking**. Participants answered seven items from the perspective-taking subscale of the Interpersonal Reactivity Index (Davis, 1980). These items were slightly modified to assess state rather than trait perspective taking motivation (e.g., \"Before criticizing somebody, I'd try to imagine how I would feel if I were in their place\"; 1 = *does not describe me at all*, 5 = *describes me very well*). Participants also completed 10 items from the Adult Reading the Mind in the Eyes Test-Revised (Baron-Cohen, Wheelwright, Hill, Raste & Plumb, 2001), which asked them to look at images of people's eyes and choose which of four emotions was expressed.\n\nParticipants completed measures for each of the dependent variables in a random order. For trust and perspective-taking, the two measures were also randomly ordered.\n\n## Load the raw data\n\nThe data were collected using Qualtrics. The first row of the raw data file contains most of the variable names. The second row contains some further variable names and the question wording. Rows three and beyond contain participant data. So we will first load in the two sets of variable names and combine them. Then, we will load in the data.\n\n```{r, cache=FALSE}\nfilename <- \"PR__Priming_Power__3_DVs__Action_PerspectiveTaking_Distrust.csv\"\n\nname1 <- names(read.csv(filename, nrow = 1))\nname2 <- names(read.csv(filename, nrow = 1, skip = 1))\nnames <- c(name2[1:22], name1[23:(length(name1))])\nraw <- read.csv(filename, header = FALSE, skip = 2, col.names = names,\n                stringsAsFactors = FALSE)\n```\n\n## Reduce data set to a final, usable set of cases\n\nThe final data set should only contain cases that represent:\n\n+ US participants\n+ Participants who passed the instructional manipulation check (IMC)\n\nWe will identify and count cases that do not meet these criteria. \n\n```{r}\n# how many cases total?\ntotalCases <- nrow(raw)\n\n# identify surveys from outside the US\nnonUScount <- nrow(raw[with(raw, Country != \"United States\"),])\n\n# identify participants who failed the IMC\nfailedIMCcount <- nrow(raw[with(raw, IMC != 10),])\n\n# identify participants who meet both exclusion criteria\nbothExcludeCount <- nrow(raw[with(raw,IMC != 10 & Country != \"United States\"),])\n\n# create final data set and count cases\nfinal <- raw[with(raw, IMC == 10 & Country == \"United States\"),]\nfinalCases <- nrow(final)\n```\n\nFrom `r totalCases` raw cases, `r nonUScount` had non-US IP addresses and `r failedIMCcount` failed the IMC (`r bothExcludeCount` failed the IMC *and* had a non-US IP), leaving `r finalCases` for analysis.\n\n## Create labels for categorical/ordinal demographic variables\n\nThe categorical and ordinal demographic variables (e.g., race, gender) are coded with numbers. We want to add category labels to these. \n\n```{r}\n# ethnicity/race\nfinal$ethnic2 <- factor(final$ethnic2,\n                        levels = c(1,2,3,4,5,6),\n                        labels = c(\"African American\",\n                                   \"Asian American\",\n                                   \"European American\",\n                                   \"Latino/Latina\",\n                                   \"Native American\",\n                                   \"Other\"))\n\n# gender\nfinal$gender <- factor(final$gender,\n                       levels = c(1,2),\n                       labels = c(\"Male\", \"Female\"))\n\n# income \nfinal$yyour <- factor(final$yyour,\n                      levels = c(1,2,3,4,5,6,7,8),\n                      labels = c(\"Under $15,000\",\n                                 \"$15,001 - $25,000\",\n                                 \"$25,000 - $35,000\",\n                                 \"$35,001 - $50,000\",\n                                 \"$50,001 - $75,000\",\n                                 \"$75,001 - $100,000\",\n                                 \"$100,001 - $150,000\",\n                                 \"Over $150,000\"))\n\n# education \nfinal$youred <- factor(final$youred,\n                       levels = c(1,2,3,4,5),\n                       labels = c(\"Less than high school\",\n                                  \"High school graduation or equivalent\",\n                                  \"Some college\", \"College graduation\",\n                                  \"Professional / Post-graduate degree\"))\n```\n\n## Create condition variables for analyses\n\nConidition was recorded with a dummy code (0 = Low Power; 1 = High Power). We will convert these to effect codes with a 1 unit difference, weighted by the number of participants randomly assigned to the other condition. Weighted effect codes will produce regression coefficients that represent the mean difference between the groups. \n\n```{r}\n# how many participants were assigned to each condition?\nlowN <- nrow(final[final$Cond == 0,])\nhighN <- nrow(final[final$Cond == 1,])\n\n# create weights\nfinal$effect[final$Cond == 0] <- -highN / finalCases\nfinal$effect[final$Cond == 1] <- lowN / finalCases\n```\n\nThere were `r lowN` and `r highN` participants in the Low and High Power conditions, respectively.\n\nWe will also turn the original dummy code into a factor, which will be useful for plotting and tables.\n\n```{r}\nfinal$Cond <- factor(final$Cond,\n                     levels = c(0,1),\n                     labels = c(\"Low Power\", \"High Power\"))\n```\n\n\n## Exploratory data analysis\n\nBefore we run our preferred model, we should use exploratory data analysis to examine the distributions of variables and investigate the potential influence of order effects on the dependent variables.\n\n### Descriptive summaries of demographic variables\n\nFirst, we will look at the demographic composition of our sample.\n \n```{r}\n# Gender\ntable(final[,\"gender\"])\n\n# Age\ndescribe(final[,\"age\"])\n\n# Race/ethnicity\nprop.table(table(final$ethnic2))\n\n# Income\nprop.table(table(final[,\"yyour\"]))\n\n# Education\nprop.table(table(final$youred))\n```\n\nOverall, the sample looks similar to other Mechanical Turk samples.\n\n### Examine distributions of dependent variables\n\nNext, we will look at distributions of the dependent variables to assess whether there are issues with the way the data were recorded and whether there are obvious problems with the distributions.\n\n#### Individual items\n\nFirst, we should examine the individual items. Are there issues with how the data were recorded (e.g., impossible values, reverse keyed).\n\nBefore we look at the items, we will need to score the items of the Reading the Mind in the Eyes (RME) test.\n\n```{r}\n# the correct answers\nanswers <- c(1, 2, 3, 2, 3, 2, 3, 1, 4, 1)\nanswers <- answers + 18 # responses were recorded as 19 through 22\n\n# for each item, initialize a score column with 0s, change to 1 if the\n# participant got the right answer\nfor (i in 1:10) {\n  colName <- names(final)[68 + i]\n  newName <- paste(colName, \"score\", sep = \"\")\n  final[, newName] <- 0\n  final[final[, colName] == answers[i], newName] <- 1\n}\n```\n\nNow we can look at the items.\n\n```{r}\n# Which columns represent items?\nactionCols <- c(44:50) # action goals\nwvsCols <- c(51:56) # World Values Survey trust\ngameCol <- 58 # trust game\niriCols <- c(61:67) # IRI\nrmeCols <- c(117:126) # RME\ndvCols <- c(actionCols, wvsCols, gameCol, iriCols, rmeCols)\n\n# Create long versions of the data set for each scale, where each item rating \n# for each participant is on a separate line\nvariable.names <- names(final)\nactionDVs <- melt(final, id = \"ResponseID\",\n                  measure.vars = variable.names[c(actionCols)])\nwvsDVs <- melt(final, id = \"ResponseID\",\n               measure.vars = variable.names[c(wvsCols)])\niriDVs <- melt(final, id = \"ResponseID\",\n               measure.vars = variable.names[c(iriCols)])\nrmeDVs <- melt(final, id = \"ResponseID\",\n               measure.vars = variable.names[c(rmeCols)])\n```\n\nWe'll look at plots for each set of variables.\n\\\n\\\n```{r, echo=FALSE, dpi=300, fig.height = 3, message = FALSE, warning = FALSE}\nactionBarPlot <- ggplot(actionDVs, aes(x = factor(value))) + \n  geom_bar() +\n  facet_wrap(~ variable) +\n  xlab(\"score\") +\n  ggtitle(\"Distributions of Raw Responses to Action/Inaction Goal Items\")\nactionBarPlot\n```\n\\\n\\\nThe action/inaction items were recorded as 19 to 26, instead of 1 to 7.\n\\\n\\\n```{r, echo=FALSE, dpi=300, fig.height = 3, message = FALSE, warning = FALSE}\nwvsBarPlot <- ggplot(wvsDVs, aes(x = factor(value))) + \n  geom_bar() +\n  facet_wrap(~ variable) +\n  xlab(\"score\") + \n  ggtitle(\"Distributions of Raw Responses to World Values Survey Trust Items\")\nwvsBarPlot\n```\n\\\n\\\nOne of the World Values Survey trust items has a severely skewed distribution. This is unsurprising as it indicates that most people trust their families completely.\n\\\n\\\n```{r, echo=FALSE, dpi=300, fig.height = 3, message = FALSE, warning = FALSE}\ngameHist <- ggplot(final, aes(x = TrustGame_1)) + \n  geom_histogram() +\n  xlab(\"tickets given\") + \n  ggtitle(\"Historgram of Number of Tickets Given Away in Trust Game\")\ngameHist\n```\n\\\n\\\nThere is a good spread of responses across the Trust Game, with an obvious mode around 500.\n\\\n\\\n```{r, echo=FALSE, dpi=300, fig.height = 3, message = FALSE, warning = FALSE}\niriBarPlot <- ggplot(iriDVs, aes(x = factor(value))) + \n  geom_bar() +\n  facet_wrap(~ variable) +\n  xlab(\"score\") +\n  ggtitle(\"Distributions of Raw Responses to IRI Items\")\niriBarPlot\n```\n\\\n\\\nLike the action/inaction items, the IRI items were recorded beginning at 19 instead of 1.\n\\\n\\\n```{r, echo=FALSE, dpi=300, fig.height = 3, message = FALSE, warning = FALSE}\nrmeBarPlot <- ggplot(rmeDVs, aes(x = factor(value))) + \n  geom_bar() +\n  facet_wrap(~ variable) +\n  xlab(\"score\") +\n  scale_y_continuous(breaks = c(0, 125, 250, 375, 500)) +\n  ggtitle(\"Distributions of Raw Responses to IRI Items\")\nrmeBarPlot\n```\n\\\n\\\nOverall, people were fairly accurate on the Reading the Mind in Eyes items, though some of items show substantial proportions of people who answered incorrectly.\n\nWe will recode the items from the action/inaction goals scale and the IRI perspective-taking scale so that they are scored as 1 to 7 and 1 to 5, respectively.\n\n```{r recode}\n# for each item, subtract 18 from the score\nfinal[, c(actionCols, iriCols)] = final[, c(actionCols, iriCols)] - 18\n```\n\n### Compute Scale Scores & Cronbach's alphas\n\nNext, we will combine the items into scales and examine their intercorrelations. Some of the items need to be reverse scored before being combined with other items.\n\n```{r reverse score}\n# reverse score inaction goal items from action/inaction goals scale\nfinal[, c(\"AI03nap\", \"AI05rest\", \"AI07relax\")] <- 8 - final[, c(\"AI03nap\", \"AI05rest\", \"AI07relax\")]\n\n# reverse score non-prespective-taking items from IRI\nfinal[, c(\"IRI01\", \"IRI04\")] <- 6 - final[, c(\"IRI01\", \"IRI04\")]\n\n# reverse score items on the WVS trust measure so that 4 indicates high trust\nfinal[, wvsCols] <- 5 - final[, wvsCols]\n```\n\n```{r cronbach}\n# create lists of key values identifying which items will be included in which\n# scales\nkey.list <- list(action = c(1:7), \n                 wvs    = c(8:13), \n                 game   = c(14),\n                 iri    = c(15:21),\n                 rme    = c(22:31))\n\n# link items names to key values\nkeys <- make.keys(31, key.list, item.labels=c(colnames(final)[dvCols]))\n\n# create scores\nscores <- scoreItems(keys,\n                     final[, dvCols],\n                     totals = FALSE,\n                     missing = TRUE,\n                     impute = \"median\")\n\n# add the scores to the data set\nfinal <- cbind(final, scores$scores)\n\n### Create standardized scale scores\nstdScores <- scale(scores$scores)\ncolnames(stdScores) <- paste(colnames(stdScores), \".z\", sep = \"\")\nfinal <- cbind(final, stdScores)\n\nprint(scores, short = FALSE)\n```\n\nIt looks like the two trust measures are weakly positively correlated, and the two perspective-taking measures are uncorrelated. For this reason, we will analyze these scales separately.\n\n### Examine demographics by condition\n\nLet's take a look at the demographic characteristics of each condition separately.\n\n```{r condition demo}\nddply(final, .(Cond), summarize,\n      men = length(ResponseID[gender == \"Male\"]) / length(ResponseID),\n      women = length(ResponseID[gender == \"Female\"]) / length(ResponseID),\n      mean.age = mean(age), \n      perc.white = length(ResponseID[ethnic2 == \"European American\"]) / length(ResponseID))\n```\n\n\n### Examine order effects\n\nLet's take a look at the demographic characteristics of each condition separately.\n\n```{r condition demo}\nddply(final, .(Cond), summarize,\n      men = length(ResponseID[gender == \"Male\"]) / length(ResponseID),\n      women = length(ResponseID[gender == \"Female\"]) / length(ResponseID),\n      mean.age = mean(age), \n      perc.white = length(ResponseID[ethnic2 == \"European American\"]) / length(ResponseID))\n```\n\n## Confirmatory analyses\n\nNow, let's look a",
    "created" : 1452614929618.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4192578469",
    "id" : "35A1A956",
    "lastKnownWriteTime" : 1452640498,
    "path" : "~/Box Sync/Research/PR_Priming/power3dvs/power3dvs.Rmd",
    "project_path" : "power3dvs.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}